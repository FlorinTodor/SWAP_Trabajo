# --------------------------------------------------------------------------
# ModSecurity Core Rules Set ver.3.3.5
# Copyright (c) 2006-2020 Trustwave and contributors. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# --------------------------------------------------------------------------

# -- Rule engine initialization ----------------------------------------------
#
# Activate the ModSecurity engine. Valid values are On, Off and DetectionOnly.
#
# DetectionOnly mode means that rules are processed, transactions are logged,
# but no disruptive actions (sDeny, Drop, Proxy, Redirect, ...) are taken.
#
# On the other hand, if the rules are active (mode On), then all actions,
# including disruptive ones, will be taken.
#
# It is recommend to run the engine in DetectionOnly mode for a period of
# time, in order to identify false positives, before switching to On.
#
SecRuleEngine On # Cambia a DetectionOnly para pruebas iniciales

# -- Request body handling ---------------------------------------------------
#
# Enable request body parsing.
#
# With this directive enabled, the request body processor will be invoked
# and the request body will be available for inspection. If this directive
# is disabled, the request body will not be processed.
#
# Note: If this directive is not used, the default behavior is to not
#       process the request body.
#
SecRequestBodyAccess On

#
# Define the request body limit.
#
# This directive defines the maximum request body size ModSecurity will
# accept for buffering. It can also be used to enforce a sane limit.
# Default is 128 KB (131072 bytes).
#
SecRequestBodyLimit 13107200 # 13 MB

#
# Define the in-memory request body limit.
#
# This directive defines the maximum request body size ModSecurity will
# store in memory. Request bodies larger than this limit will be streamed
# to a temporary file on disk. Default is 128 KB (131072 bytes).
#
SecRequestBodyNoFilesLimit 131072

#
# Store files extracted from multipart request body in this directory.
#
# This directive defines the directory where files extracted from
# multipart request bodies will be stored. This directory must be
# writable by the web server user. Default is /tmp.
#
SecTmpDir /opt/modsecurity/var/data/

#
# Define the path for the data directory.
#
# This directive defines the path for the data directory, where
# ModSecurity will store persistent data (e.g. IP address reputation,
# session data, etc). This directory must be writable by the web
# server user. Default is /tmp.
#
SecDataDir /opt/modsecurity/var/data/


# -- Response body handling --------------------------------------------------
#
# Enable response body inspection.
#
# With this directive enabled, the response body will be available for
# inspection. If this directive is disabled, the response body will not
# be processed.
#
# Note: If this directive is not used, the default behavior is to not
#       process the response body.
#
SecResponseBodyAccess On

#
# Define the response body limit.
#
# This directive defines the maximum response body size ModSecurity will
# accept for buffering. It can also be used to enforce a sane limit.
# Default is 512 KB (524288 bytes).
#
SecResponseBodyLimit 5242880 # 5 MB

#
# Define the response body MIME types to be inspected.
#
# This directive defines the response body MIME types that ModSecurity
# will inspect. Default is "text/plain text/html text/xml".
#
SecResponseBodyMimeType text/plain text/html text/xml application/json

# -- Logging -----------------------------------------------------------------
#
# Define the audit log.
#
# The audit log is where ModSecurity will store information about
# processed transactions.
#
# Note: If this directive is not used, the default behavior is to not
#       log any audit information.
#
SecAuditEngine RelevantOnly # Logs only relevant transactions (those that trigger a rule)
SecAuditLogType Serial
SecAuditLog /var/log/modsecurity/audit.log
SecAuditLogParts ABCIJDEFHZ # Which parts to log

#
# Define the debug log.
#
# The debug log is where ModSecurity will store detailed information
# about its operation. It is useful for troubleshooting.
#
# Note: If this directive is not used, the default behavior is to not
#       log any debug information.
#
SecDebugLog /var/log/modsecurity/debug.log
SecDebugLogLevel 0 # 0 (no debug) to 9 (max debug)

# Include the CRS setup file and rules
Include /etc/nginx/modsecurity.d/owasp-crs/crs-setup.conf
Include /etc/nginx/modsecurity.d/owasp-crs/rules/*.conf

# Si tienes reglas personalizadas:
# Include /etc/nginx/modsecurity.d/custom-rules.conf